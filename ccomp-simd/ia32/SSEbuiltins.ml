(*
This file was generated by 'procSSEbuiltins.py'. It extracts information from http://gcc.gnu.org/onlinedocs/gcc/X86-Built-in-Functions.html and combines it
with a x86-asm reference sheet (from http://ref.x86asm.net) to infer the
necessary data. Whenever the heuristics used fail to give a meaningful result
the entry is tagged with the 'NYI' assembly instruction.
*)
open C
open Ctypes
open Cutil

(* Classes of simd-instructions: *)
let cSSE = 1
let cSSE2 = 2
let cSSE3 = 3
let cSSSE3 = 4
let cSSE41 = 5
let cSSE42 = 6
let cAES = 7
let cPCLMUL = 8
let cRDRND = 9
let cMMX = 10 (** NOTE: **)

(* C types *)
let t_ptr ty = TPtr (ty, [])
let t_const ty = add_attributes_type [AConst] ty
let t_void = TVoid []
let t_float = TFloat (FFloat,[])
let t_double = TFloat (FDouble,[])
let t_char = TInt (IChar,[])
let t_uchar = TInt (IUChar,[])
let t_short = TInt (IShort,[])
let t_ushort = TInt (IUShort,[])
let t_int = TInt (IInt,[])
let t_uint = TInt (IUInt,[])
let t_long = TInt (ILong,[])
let t_ulong = TInt (IULong,[])
let t_longlong = TInt (ILongLong,[])
let t_ulonglong = TInt (IULongLong,[])
(* simd types *)
let t_t128 = TVecdata []
let t_m128 = t_t128
let t_m128d = t_t128
let t_m128i = t_t128
let t_v4sf = t_t128
let t_v4si = t_t128
let t_v2df = t_t128
let t_v2di = t_t128
let t_v8hi = t_t128
let t_v16qi = t_t128
let t_v16qs = t_t128

let simd_builtins_gen = [
(* "REJECTEDv8qi __builtin_ia32_paddb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_paddw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_paddd (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_psubb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_psubw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_psubd (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_paddsb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_paddsw (v4hi, v4hi )"  *)
(* "REJECTEDv8qi __builtin_ia32_psubsb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_psubsw (v4hi, v4hi )"  *)
(* "REJECTEDv8qi __builtin_ia32_paddusb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_paddusw (v4hi, v4hi )"  *)
(* "REJECTEDv8qi __builtin_ia32_psubusb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_psubusw (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pmullw (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pmulhw (v4hi, v4hi )"  *)
(* "REJECTEDdi __builtin_ia32_pand (di, di )"  *)
(* "REJECTEDdi __builtin_ia32_pandn (di,di )"  *)
(* "REJECTEDdi __builtin_ia32_por (di, di )"  *)
(* "REJECTEDdi __builtin_ia32_pxor (di, di )"  *)
(* "REJECTEDv8qi __builtin_ia32_pcmpeqb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pcmpeqw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_pcmpeqd (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_pcmpgtb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pcmpgtw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_pcmpgtd (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_punpckhbw (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_punpckhwd (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_punpckhdq (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_punpcklbw (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_punpcklwd (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_punpckldq (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_packsswb (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_packssdw (v2si, v2si )"  *)
(* "REJECTEDv8qi __builtin_ia32_packuswb (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_psllw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_pslld (v2si, v2si )"  *)
(* "REJECTEDv1di __builtin_ia32_psllq (v1di, v1di )"  *)
(* "REJECTEDv4hi __builtin_ia32_psrlw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_psrld (v2si, v2si )"  *)
(* "REJECTEDv1di __builtin_ia32_psrlq (v1di, v1di )"  *)
(* "REJECTEDv4hi __builtin_ia32_psraw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_psrad (v2si, v2si )"  *)
(* "REJECTEDv4hi __builtin_ia32_psllwi (v4hi, int )"  *)
(* "REJECTEDv2si __builtin_ia32_pslldi (v2si, int )"  *)
(* "REJECTEDv1di __builtin_ia32_psllqi (v1di, int )"  *)
(* "REJECTEDv4hi __builtin_ia32_psrlwi (v4hi, int )"  *)
(* "REJECTEDv2si __builtin_ia32_psrldi (v2si, int )"  *)
(* "REJECTEDv1di __builtin_ia32_psrlqi (v1di, int )"  *)
(* "REJECTEDv4hi __builtin_ia32_psrawi (v4hi, int )"  *)
(* "REJECTEDv2si __builtin_ia32_psradi (v2si, int )"  *)
(* "REJECTEDv4hi __builtin_ia32_pmulhuw (v4hi, v4hi )"  *)
(* "REJECTEDv8qi __builtin_ia32_pavgb (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pavgw (v4hi, v4hi )"  *)
(* "REJECTEDv1di __builtin_ia32_psadbw (v8qi, v8qi )"  *)
(* "REJECTEDv8qi __builtin_ia32_pmaxub (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pmaxsw (v4hi, v4hi )"  *)
(* "REJECTEDv8qi __builtin_ia32_pminub (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pminsw (v4hi, v4hi )"  *)
(* "REJECTEDint __builtin_ia32_pmovmskb (v8qi )"  *)
(* "REJECTEDvoid __builtin_ia32_maskmovq (v8qi, v8qi, char * )"  *)
(* "REJECTEDvoid __builtin_ia32_movntq (di *, di )"  *)
   ( "__builtin_ia32_sfence"
   , (t_void, [], false)
   , cSSE
   , []		
   , "sfence"		
   , true		
   )
;  ( "__builtin_ia32_comieq"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for COMIEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_comieq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMIEQ*)
   )
;  ( "__builtin_ia32_comineq"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for COMINEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_comineq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMINEQ*)
   )
;  ( "__builtin_ia32_comilt"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for COMILT*)
   , "NYI"		(*Asm instruction __builtin_ia32_comilt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMILT*)
   )
;  ( "__builtin_ia32_comile"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for COMILE*)
   , "NYI"		(*Asm instruction __builtin_ia32_comile not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMILE*)
   )
;  ( "__builtin_ia32_comigt"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for COMIGT*)
   , "NYI"		(*Asm instruction __builtin_ia32_comigt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMIGT*)
   )
;  ( "__builtin_ia32_comige"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for COMIGE*)
   , "NYI"		(*Asm instruction __builtin_ia32_comige not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMIGE*)
   )
;  ( "__builtin_ia32_ucomieq"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for UCOMIEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomieq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMIEQ*)
   )
;  ( "__builtin_ia32_ucomineq"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for UCOMINEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomineq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMINEQ*)
   )
;  ( "__builtin_ia32_ucomilt"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for UCOMILT*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomilt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMILT*)
   )
;  ( "__builtin_ia32_ucomile"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for UCOMILE*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomile not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMILE*)
   )
;  ( "__builtin_ia32_ucomigt"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for UCOMIGT*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomigt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMIGT*)
   )
;  ( "__builtin_ia32_ucomige"
   , (t_int, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		(*cannot infer immediate arguments for UCOMIGE*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomige not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMIGE*)
   )
;  ( "__builtin_ia32_addps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "addps"		
   , true		
   )
;  ( "__builtin_ia32_subps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "subps"		
   , true		
   )
;  ( "__builtin_ia32_mulps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "mulps"		
   , true		
   )
;  ( "__builtin_ia32_divps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "divps"		
   , true		
   )
;  ( "__builtin_ia32_addss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "addss"		
   , true		
   )
;  ( "__builtin_ia32_subss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "subss"		
   , true		
   )
;  ( "__builtin_ia32_mulss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "mulss"		
   , true		
   )
;  ( "__builtin_ia32_divss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "divss"		
   , true		
   )
;  ( "__builtin_ia32_cmpeqps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpeqps"		
   , true		
   )
;  ( "__builtin_ia32_cmpltps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpltps"		
   , true		
   )
;  ( "__builtin_ia32_cmpleps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpleps"		
   , true		
   )
;  ( "__builtin_ia32_cmpgtps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpgtps"		
   , true		
   )
;  ( "__builtin_ia32_cmpgeps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpgeps"		
   , true		
   )
;  ( "__builtin_ia32_cmpunordps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpunordps"		
   , true		
   )
;  ( "__builtin_ia32_cmpneqps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpneqps"		
   , true		
   )
;  ( "__builtin_ia32_cmpnltps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpnltps"		
   , true		
   )
;  ( "__builtin_ia32_cmpnleps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpnleps"		
   , true		
   )
;  ( "__builtin_ia32_cmpngtps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpngtps"		
   , true		
   )
;  ( "__builtin_ia32_cmpngeps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpngeps"		
   , true		
   )
;  ( "__builtin_ia32_cmpordps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpordps"		
   , true		
   )
;  ( "__builtin_ia32_cmpeqss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpeqss"		
   , true		
   )
;  ( "__builtin_ia32_cmpltss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpltss"		
   , true		
   )
;  ( "__builtin_ia32_cmpless"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpless"		
   , true		
   )
;  ( "__builtin_ia32_cmpunordss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpunordss"		
   , true		
   )
;  ( "__builtin_ia32_cmpneqss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpneqss"		
   , true		
   )
;  ( "__builtin_ia32_cmpnltss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpnltss"		
   , true		
   )
;  ( "__builtin_ia32_cmpnless"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpnless"		
   , true		
   )
;  ( "__builtin_ia32_cmpordss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "cmpordss"		
   , true		
   )
;  ( "__builtin_ia32_maxps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "maxps"		
   , true		
   )
;  ( "__builtin_ia32_maxss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "maxss"		
   , true		
   )
;  ( "__builtin_ia32_minps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "minps"		
   , true		
   )
;  ( "__builtin_ia32_minss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "minss"		
   , true		
   )
;  ( "__builtin_ia32_andps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "andps"		
   , true		
   )
;  ( "__builtin_ia32_andnps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "andnps"		
   , true		
   )
;  ( "__builtin_ia32_orps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "orps"		
   , true		
   )
;  ( "__builtin_ia32_xorps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "xorps"		
   , true		
   )
;  ( "__builtin_ia32_movss"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "movss"		
   , true		
   )
;  ( "__builtin_ia32_movhlps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "movhlps"		
   , true		
   )
;  ( "__builtin_ia32_movlhps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "movlhps"		
   , true		
   )
;  ( "__builtin_ia32_unpckhps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "unpckhps"		
   , true		
   )
;  ( "__builtin_ia32_unpcklps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE
   , []		
   , "unpcklps"		
   , true		
   )
(* "REJECTEDv4sf __builtin_ia32_cvtpi2ps (v4sf, v2si )"  *)
;  ( "__builtin_ia32_cvtsi2ss"
   , (t_v4sf, [t_v4sf;t_int], false)
   , cSSE
   , []		
   , "cvtsi2ss"		
   , true		
   )
(* "REJECTEDv2si __builtin_ia32_cvtps2pi (v4sf )"  *)
;  ( "__builtin_ia32_cvtss2si"
   , (t_int, [t_v4sf], false)
   , cSSE
   , []		
   , "cvtss2si"		
   , false		
   )
(* "REJECTEDv2si __builtin_ia32_cvttps2pi (v4sf )"  *)
;  ( "__builtin_ia32_cvttss2si"
   , (t_int, [t_v4sf], false)
   , cSSE
   , []		
   , "cvttss2si"		
   , false		
   )
;  ( "__builtin_ia32_rcpps"
   , (t_v4sf, [t_v4sf], false)
   , cSSE
   , []		
   , "rcpps"		
   , false		
   )
;  ( "__builtin_ia32_rsqrtps"
   , (t_v4sf, [t_v4sf], false)
   , cSSE
   , []		
   , "rsqrtps"		
   , false		
   )
;  ( "__builtin_ia32_sqrtps"
   , (t_v4sf, [t_v4sf], false)
   , cSSE
   , []		
   , "sqrtps"		
   , false		
   )
;  ( "__builtin_ia32_rcpss"
   , (t_v4sf, [t_v4sf], false)
   , cSSE
   , []		
   , "rcpss"		
   , false		
   )
;  ( "__builtin_ia32_rsqrtss"
   , (t_v4sf, [t_v4sf], false)
   , cSSE
   , []		
   , "rsqrtss"		
   , false		
   )
;  ( "__builtin_ia32_sqrtss"
   , (t_v4sf, [t_v4sf], false)
   , cSSE
   , []		
   , "sqrtss"		
   , false		
   )
;  ( "__builtin_ia32_shufps"
   , (t_v4sf, [t_v4sf;t_v4sf;t_int], false)
   , cSSE
   , [2]		
   , "shufps"		
   , true		
   )
;  ( "__builtin_ia32_movntps"
   , (t_void, [t_ptr (t_float);t_v4sf], false)
   , cSSE
   , []		
   , "movntps"		
   , true		
   )
;  ( "__builtin_ia32_movmskps"
   , (t_int, [t_v4sf], false)
   , cSSE
   , []		
   , "movmskps"		
   , false		
   )
;  ( "__builtin_ia32_loadups"
   , (t_v4sf, [t_ptr (t_float)], false)
   , cSSE
   , []		
   , "movups (%1), %0"		
   , false		
   )
;  ( "__builtin_ia32_storeups"
   , (t_void, [t_ptr (t_float);t_v4sf], false)
   , cSSE
   , []		
   , "movups %2, (%1)"		
   , true		
   )
;  ( "__builtin_ia32_loadss"
   , (t_v4sf, [t_ptr (t_float)], false)
   , cSSE
   , []		
   , "movss (%1), %0"		
   , false		
   )
(* "REJECTEDv4sf __builtin_ia32_loadhps (v4sf, const v2sf * )"  *)
(* "REJECTEDv4sf __builtin_ia32_loadlps (v4sf, const v2sf * )"  *)
(* "REJECTEDvoid __builtin_ia32_storehps (v2sf *, v4sf )"  *)
(* "REJECTEDvoid __builtin_ia32_storelps (v2sf *, v4sf )"  *)
;  ( "__builtin_ia32_comisdeq"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for COMISDEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_comisdeq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMISDEQ*)
   )
;  ( "__builtin_ia32_comisdlt"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for COMISDLT*)
   , "NYI"		(*Asm instruction __builtin_ia32_comisdlt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMISDLT*)
   )
;  ( "__builtin_ia32_comisdle"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for COMISDLE*)
   , "NYI"		(*Asm instruction __builtin_ia32_comisdle not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMISDLE*)
   )
;  ( "__builtin_ia32_comisdgt"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for COMISDGT*)
   , "NYI"		(*Asm instruction __builtin_ia32_comisdgt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMISDGT*)
   )
;  ( "__builtin_ia32_comisdge"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for COMISDGE*)
   , "NYI"		(*Asm instruction __builtin_ia32_comisdge not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMISDGE*)
   )
;  ( "__builtin_ia32_comisdneq"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for COMISDNEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_comisdneq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction COMISDNEQ*)
   )
;  ( "__builtin_ia32_ucomisdeq"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for UCOMISDEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomisdeq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMISDEQ*)
   )
;  ( "__builtin_ia32_ucomisdlt"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for UCOMISDLT*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomisdlt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMISDLT*)
   )
;  ( "__builtin_ia32_ucomisdle"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for UCOMISDLE*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomisdle not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMISDLE*)
   )
;  ( "__builtin_ia32_ucomisdgt"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for UCOMISDGT*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomisdgt not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMISDGT*)
   )
;  ( "__builtin_ia32_ucomisdge"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for UCOMISDGE*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomisdge not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMISDGE*)
   )
;  ( "__builtin_ia32_ucomisdneq"
   , (t_int, [t_v2df;t_v2df], false)
   , cSSE2
   , []		(*cannot infer immediate arguments for UCOMISDNEQ*)
   , "NYI"		(*Asm instruction __builtin_ia32_ucomisdneq not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction UCOMISDNEQ*)
   )
;  ( "__builtin_ia32_cmpeqpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpeqpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpltpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpltpd"		
   , true		
   )
;  ( "__builtin_ia32_cmplepd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmplepd"		
   , true		
   )
;  ( "__builtin_ia32_cmpgtpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpgtpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpgepd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpgepd"		
   , true		
   )
;  ( "__builtin_ia32_cmpunordpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpunordpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpneqpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpneqpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpnltpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpnltpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpnlepd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpnlepd"		
   , true		
   )
;  ( "__builtin_ia32_cmpngtpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpngtpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpngepd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpngepd"		
   , true		
   )
;  ( "__builtin_ia32_cmpordpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpordpd"		
   , true		
   )
;  ( "__builtin_ia32_cmpeqsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpeqsd"		
   , true		
   )
;  ( "__builtin_ia32_cmpltsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpltsd"		
   , true		
   )
;  ( "__builtin_ia32_cmplesd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmplesd"		
   , true		
   )
;  ( "__builtin_ia32_cmpunordsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpunordsd"		
   , true		
   )
;  ( "__builtin_ia32_cmpneqsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpneqsd"		
   , true		
   )
;  ( "__builtin_ia32_cmpnltsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpnltsd"		
   , true		
   )
;  ( "__builtin_ia32_cmpnlesd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpnlesd"		
   , true		
   )
;  ( "__builtin_ia32_cmpordsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "cmpordsd"		
   , true		
   )
;  ( "__builtin_ia32_paddq"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "paddq"		
   , true		
   )
;  ( "__builtin_ia32_psubq"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "psubq"		
   , true		
   )
;  ( "__builtin_ia32_addpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "addpd"		
   , true		
   )
;  ( "__builtin_ia32_subpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "subpd"		
   , true		
   )
;  ( "__builtin_ia32_mulpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "mulpd"		
   , true		
   )
;  ( "__builtin_ia32_divpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "divpd"		
   , true		
   )
;  ( "__builtin_ia32_addsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "addsd"		
   , true		
   )
;  ( "__builtin_ia32_subsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "subsd"		
   , true		
   )
;  ( "__builtin_ia32_mulsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "mulsd"		
   , true		
   )
;  ( "__builtin_ia32_divsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "divsd"		
   , true		
   )
;  ( "__builtin_ia32_minpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "minpd"		
   , true		
   )
;  ( "__builtin_ia32_maxpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "maxpd"		
   , true		
   )
;  ( "__builtin_ia32_minsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "minsd"		
   , true		
   )
;  ( "__builtin_ia32_maxsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "maxsd"		
   , true		
   )
;  ( "__builtin_ia32_andpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "andpd"		
   , true		
   )
;  ( "__builtin_ia32_andnpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "andnpd"		
   , true		
   )
;  ( "__builtin_ia32_orpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "orpd"		
   , true		
   )
;  ( "__builtin_ia32_xorpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "xorpd"		
   , true		
   )
;  ( "__builtin_ia32_movsd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "movsd"		
   , true		
   )
;  ( "__builtin_ia32_unpckhpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "unpckhpd"		
   , true		
   )
;  ( "__builtin_ia32_unpcklpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE2
   , []		
   , "unpcklpd"		
   , true		
   )
;  ( "__builtin_ia32_paddb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "paddb"		
   , true		
   )
;  ( "__builtin_ia32_paddw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "paddw"		
   , true		
   )
;  ( "__builtin_ia32_paddd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "paddd"		
   , true		
   )
;  ( "__builtin_ia32_paddq128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "paddq"		
   , true		
   )
;  ( "__builtin_ia32_psubb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "psubb"		
   , true		
   )
;  ( "__builtin_ia32_psubw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "psubw"		
   , true		
   )
;  ( "__builtin_ia32_psubd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "psubd"		
   , true		
   )
;  ( "__builtin_ia32_psubq128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "psubq"		
   , true		
   )
;  ( "__builtin_ia32_pmullw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pmullw"		
   , true		
   )
;  ( "__builtin_ia32_pmulhw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pmulhw"		
   , true		
   )
;  ( "__builtin_ia32_pand128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "pand"		
   , true		
   )
;  ( "__builtin_ia32_pandn128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "pandn"		
   , true		
   )
;  ( "__builtin_ia32_por128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "por"		
   , true		
   )
;  ( "__builtin_ia32_pxor128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "pxor"		
   , true		
   )
;  ( "__builtin_ia32_pavgb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "pavgb"		
   , true		
   )
;  ( "__builtin_ia32_pavgw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pavgw"		
   , true		
   )
;  ( "__builtin_ia32_pcmpeqb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "pcmpeqb"		
   , true		
   )
;  ( "__builtin_ia32_pcmpeqw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pcmpeqw"		
   , true		
   )
;  ( "__builtin_ia32_pcmpeqd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "pcmpeqd"		
   , true		
   )
;  ( "__builtin_ia32_pcmpgtb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "pcmpgtb"		
   , true		
   )
;  ( "__builtin_ia32_pcmpgtw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pcmpgtw"		
   , true		
   )
;  ( "__builtin_ia32_pcmpgtd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "pcmpgtd"		
   , true		
   )
;  ( "__builtin_ia32_pmaxub128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "pmaxub"		
   , true		
   )
;  ( "__builtin_ia32_pmaxsw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pmaxsw"		
   , true		
   )
;  ( "__builtin_ia32_pminub128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "pminub"		
   , true		
   )
;  ( "__builtin_ia32_pminsw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pminsw"		
   , true		
   )
;  ( "__builtin_ia32_punpckhbw128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "punpckhbw"		
   , true		
   )
;  ( "__builtin_ia32_punpckhwd128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "punpckhwd"		
   , true		
   )
;  ( "__builtin_ia32_punpckhdq128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "punpckhdq"		
   , true		
   )
;  ( "__builtin_ia32_punpckhqdq128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "punpckhqdq"		
   , true		
   )
;  ( "__builtin_ia32_punpcklbw128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "punpcklbw"		
   , true		
   )
;  ( "__builtin_ia32_punpcklwd128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "punpcklwd"		
   , true		
   )
;  ( "__builtin_ia32_punpckldq128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "punpckldq"		
   , true		
   )
;  ( "__builtin_ia32_punpcklqdq128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		
   , "punpcklqdq"		
   , true		
   )
;  ( "__builtin_ia32_packsswb128"
   , (t_v16qi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "packsswb"		
   , true		
   )
;  ( "__builtin_ia32_packssdw128"
   , (t_v8hi, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "packssdw"		
   , true		
   )
;  ( "__builtin_ia32_packuswb128"
   , (t_v16qi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "packuswb"		
   , true		
   )
;  ( "__builtin_ia32_pmulhuw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pmulhuw"		
   , true		
   )
;  ( "__builtin_ia32_maskmovdqu"
   , (t_void, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "maskmovdqu"		
   , false		
   )
;  ( "__builtin_ia32_loadupd"
   , (t_v2df, [t_ptr (t_double)], false)
   , cSSE2
   , []		
   , "movupd (%1), %0"		
   , false		
   )
;  ( "__builtin_ia32_storeupd"
   , (t_void, [t_ptr (t_double);t_v2df], false)
   , cSSE2
   , []		
   , "movupd %2, (%1)"		
   , true		
   )
;  ( "__builtin_ia32_loadhpd"
   , (t_v2df, [t_v2df;t_ptr (t_const (t_double))], false)
   , cSSE2
   , []		
   , "movhpd (%2), %1"		
   , true		
   )
;  ( "__builtin_ia32_loadlpd"
   , (t_v2df, [t_v2df;t_ptr (t_const (t_double))], false)
   , cSSE2
   , []		
   , "movlpd (%2), %1"		
   , true		
   )
;  ( "__builtin_ia32_movmskpd"
   , (t_int, [t_v2df], false)
   , cSSE2
   , []		
   , "movmskpd"		
   , false		
   )
;  ( "__builtin_ia32_pmovmskb128"
   , (t_int, [t_v16qi], false)
   , cSSE2
   , []		
   , "pmovmskb"		
   , false		
   )
;  ( "__builtin_ia32_movnti"
   , (t_void, [t_ptr (t_int);t_int], false)
   , cSSE2
   , []		
   , "movnti"		
   , true		
   )
;  ( "__builtin_ia32_movnti64"
   , (t_void, [t_ptr (t_longlong);t_longlong], false)
   , cSSE2
   , []		
   , "movnti"		
   , true		
   )
;  ( "__builtin_ia32_movntpd"
   , (t_void, [t_ptr (t_double);t_v2df], false)
   , cSSE2
   , []		
   , "movntpd"		
   , true		
   )
;  ( "__builtin_ia32_movntdq"
   , (t_void, [t_ptr (t_v2df);t_v2df], false)
   , cSSE2
   , []		
   , "movntdq"		
   , true		
   )
;  ( "__builtin_ia32_pshufd"
   , (t_v4si, [t_v4si;t_int], false)
   , cSSE2
   , [1]		
   , "pshufd"		
   , false		
   )
;  ( "__builtin_ia32_pshuflw"
   , (t_v8hi, [t_v8hi;t_int], false)
   , cSSE2
   , [1]		
   , "pshuflw"		
   , false		
   )
;  ( "__builtin_ia32_pshufhw"
   , (t_v8hi, [t_v8hi;t_int], false)
   , cSSE2
   , [1]		
   , "pshufhw"		
   , false		
   )
;  ( "__builtin_ia32_psadbw128"
   , (t_v2di, [t_v16qi;t_v16qi], false)
   , cSSE2
   , []		
   , "psadbw"		
   , true		
   )
;  ( "__builtin_ia32_sqrtpd"
   , (t_v2df, [t_v2df], false)
   , cSSE2
   , []		
   , "sqrtpd"		
   , false		
   )
;  ( "__builtin_ia32_sqrtsd"
   , (t_v2df, [t_v2df], false)
   , cSSE2
   , []		
   , "sqrtsd"		
   , false		
   )
;  ( "__builtin_ia32_shufpd"
   , (t_v2df, [t_v2df;t_v2df;t_int], false)
   , cSSE2
   , [2]		
   , "shufpd"		
   , true		
   )
;  ( "__builtin_ia32_cvtdq2pd"
   , (t_v2df, [t_v4si], false)
   , cSSE2
   , []		
   , "cvtdq2pd"		
   , false		
   )
;  ( "__builtin_ia32_cvtdq2ps"
   , (t_v4sf, [t_v4si], false)
   , cSSE2
   , []		
   , "cvtdq2ps"		
   , false		
   )
;  ( "__builtin_ia32_cvtpd2dq"
   , (t_v4si, [t_v2df], false)
   , cSSE2
   , []		
   , "cvtpd2dq"		
   , false		
   )
(* "REJECTEDv2si __builtin_ia32_cvtpd2pi (v2df )"  *)
;  ( "__builtin_ia32_cvtpd2ps"
   , (t_v4sf, [t_v2df], false)
   , cSSE2
   , []		
   , "cvtpd2ps"		
   , false		
   )
;  ( "__builtin_ia32_cvttpd2dq"
   , (t_v4si, [t_v2df], false)
   , cSSE2
   , []		
   , "cvttpd2dq"		
   , false		
   )
(* "REJECTEDv2si __builtin_ia32_cvttpd2pi (v2df )"  *)
(* "REJECTEDv2df __builtin_ia32_cvtpi2pd (v2si )"  *)
;  ( "__builtin_ia32_cvtsd2si"
   , (t_int, [t_v2df], false)
   , cSSE2
   , []		
   , "cvtsd2si"		
   , false		
   )
;  ( "__builtin_ia32_cvttsd2si"
   , (t_int, [t_v2df], false)
   , cSSE2
   , []		
   , "cvttsd2si"		
   , false		
   )
(*
;  ( "__builtin_ia32_cvtsd2si64"
   , (t_longlong, [t_v2df], false)
   , cSSE2
   , []		
   , "cvtsd2si"		
   , false		
   )
   *)
;  ( "__builtin_ia32_cvttsd2si64"
   , (t_longlong, [t_v2df], false)
   , cSSE2
   , []		
   , "cvttsd2si"		
   , false		
   )
;  ( "__builtin_ia32_cvtps2dq"
   , (t_v4si, [t_v4sf], false)
   , cSSE2
   , []		
   , "cvtps2dq"		
   , false		
   )
;  ( "__builtin_ia32_cvtps2pd"
   , (t_v2df, [t_v4sf], false)
   , cSSE2
   , []		
   , "cvtps2pd"		
   , false		
   )
;  ( "__builtin_ia32_cvttps2dq"
   , (t_v4si, [t_v4sf], false)
   , cSSE2
   , []		
   , "cvttps2dq"		
   , false		
   )
;  ( "__builtin_ia32_cvtsi2sd"
   , (t_v2df, [t_v2df;t_int], false)
   , cSSE2
   , []		
   , "cvtsi2sd"		
   , true		
   )
;  ( "__builtin_ia32_cvtsi642sd"
   , (t_v2df, [t_v2df;t_longlong], false)
   , cSSE2
   , []		
   , "cvtsi2sd"		
   , true		
   )
;  ( "__builtin_ia32_cvtsd2ss"
   , (t_v4sf, [t_v4sf;t_v2df], false)
   , cSSE2
   , []		
   , "cvtsd2ss"		
   , true		
   )
;  ( "__builtin_ia32_cvtss2sd"
   , (t_v2df, [t_v2df;t_v4sf], false)
   , cSSE2
   , []		
   , "cvtss2sd"		
   , true		
   )
;  ( "__builtin_ia32_clflush"
   , (t_void, [t_ptr (t_const (t_void))], false)
   , cSSE2
   , []		
   , "clflush"		
   , true		
   )
;  ( "__builtin_ia32_lfence"
   , (t_void, [], false)
   , cSSE2
   , []		
   , "lfence"		
   , true		
   )
;  ( "__builtin_ia32_mfence"
   , (t_void, [], false)
   , cSSE2
   , []		
   , "mfence"		
   , true		
   )
;  ( "__builtin_ia32_loaddqu"
   , (t_v16qi, [t_ptr (t_const (t_char))], false)
   , cSSE2
   , []		
   , "movdqu (%1), %0"		
   , false		
   )
;  ( "__builtin_ia32_storedqu"
   , (t_void, [t_ptr (t_char);t_v16qi], false)
   , cSSE2
   , []		
   , "movdqu %2, (%1)"		
   , true		
   )
(* "REJECTEDv1di __builtin_ia32_pmuludq (v2si, v2si )"  *)
;  ( "__builtin_ia32_pmuludq128"
   , (t_v2di, [t_v4si;t_v4si], false)
   , cSSE2
   , []		
   , "pmuludq"		
   , true		
   )
;  ( "__builtin_ia32_psllw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psllw"		
   , true		
   )
;  ( "__builtin_ia32_pslld128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "pslld"		
   , true		
   )
;  ( "__builtin_ia32_psllq128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psllq"		
   , true		
   )
;  ( "__builtin_ia32_psrlw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psrlw"		
   , true		
   )
;  ( "__builtin_ia32_psrld128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psrld"		
   , true		
   )
;  ( "__builtin_ia32_psrlq128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psrlq"		
   , true		
   )
;  ( "__builtin_ia32_psraw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psraw"		
   , true		
   )
;  ( "__builtin_ia32_psrad128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE2
   , []		(*obs:immediate argument was rejected because of its type!*)
   , "psrad"		
   , true		
   )
;  ( "__builtin_ia32_pslldqi128"
   , (t_v2di, [t_v2di;t_int], false)
   , cSSE2
   , [1]		
   , "pslldq"		
   , true		
   )
;  ( "__builtin_ia32_psllwi128"
   , (t_v8hi, [t_v8hi;t_int], false)
   , cSSE2
   , [1]		
   , "psllw"		
   , true		
   )
;  ( "__builtin_ia32_pslldi128"
   , (t_v4si, [t_v4si;t_int], false)
   , cSSE2
   , [1]		
   , "pslld"		
   , true		
   )
;  ( "__builtin_ia32_psllqi128"
   , (t_v2di, [t_v2di;t_int], false)
   , cSSE2
   , [1]		
   , "psllq"		
   , true		
   )
;  ( "__builtin_ia32_psrldqi128"
   , (t_v2di, [t_v2di;t_int], false)
   , cSSE2
   , [1]		
   , "psrldq"		
   , true		
   )
;  ( "__builtin_ia32_psrlwi128"
   , (t_v8hi, [t_v8hi;t_int], false)
   , cSSE2
   , [1]		
   , "psrlw"		
   , true		
   )
;  ( "__builtin_ia32_psrldi128"
   , (t_v4si, [t_v4si;t_int], false)
   , cSSE2
   , [1]		
   , "psrld"		
   , true		
   )
;  ( "__builtin_ia32_psrlqi128"
   , (t_v2di, [t_v2di;t_int], false)
   , cSSE2
   , [1]		
   , "psrlq"		
   , true		
   )
;  ( "__builtin_ia32_psrawi128"
   , (t_v8hi, [t_v8hi;t_int], false)
   , cSSE2
   , [1]		
   , "psraw"		
   , true		
   )
;  ( "__builtin_ia32_psradi128"
   , (t_v4si, [t_v4si;t_int], false)
   , cSSE2
   , [1]		
   , "psrad"		
   , true		
   )
;  ( "__builtin_ia32_pmaddwd128"
   , (t_v4si, [t_v8hi;t_v8hi], false)
   , cSSE2
   , []		
   , "pmaddwd"		
   , true		
   )
;  ( "__builtin_ia32_movq128"
   , (t_v2di, [t_v2di], false)
   , cSSE2
   , []		
   , "movq"		
   , false		
   )
;  ( "__builtin_ia32_addsubpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE3
   , []		
   , "addsubpd"		
   , true		
   )
;  ( "__builtin_ia32_addsubps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE3
   , []		
   , "addsubps"		
   , true		
   )
;  ( "__builtin_ia32_haddpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE3
   , []		
   , "haddpd"		
   , true		
   )
;  ( "__builtin_ia32_haddps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE3
   , []		
   , "haddps"		
   , true		
   )
;  ( "__builtin_ia32_hsubpd"
   , (t_v2df, [t_v2df;t_v2df], false)
   , cSSE3
   , []		
   , "hsubpd"		
   , true		
   )
;  ( "__builtin_ia32_hsubps"
   , (t_v4sf, [t_v4sf;t_v4sf], false)
   , cSSE3
   , []		
   , "hsubps"		
   , true		
   )
(** NOTE : _mm_lddqu_si128 **)
;  ( "__builtin_ia32_lddqu"
   , (t_v16qi, [t_ptr (t_const (t_char))], false)
   , cSSE3
   , []		
   , "lddqu (%1), %0"	
   , false		
   )
;  ( "__builtin_ia32_monitor"
   , (t_void, [t_ptr (t_void);t_uint;t_uint], false)
   , cSSE3
   , []		
   , "monitor"		
   , true		
   )
;  ( "__builtin_ia32_movshdup"
   , (t_v4sf, [t_v4sf], false)
   , cSSE3
   , []		
   , "movshdup"		
   , false		
   )
;  ( "__builtin_ia32_movsldup"
   , (t_v4sf, [t_v4sf], false)
   , cSSE3
   , []		
   , "movsldup"		
   , false		
   )
;  ( "__builtin_ia32_mwait"
   , (t_void, [t_uint;t_uint], false)
   , cSSE3
   , []		
   , "mwait"		
   , true		
   )
(* "REJECTEDv2si __builtin_ia32_phaddd (v2si, v2si )"  *)
(* "REJECTEDv4hi __builtin_ia32_phaddw (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_phaddsw (v4hi, v4hi )"  *)
(* "REJECTEDv2si __builtin_ia32_phsubd (v2si, v2si )"  *)
(* "REJECTEDv4hi __builtin_ia32_phsubw (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_phsubsw (v4hi, v4hi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pmaddubsw (v8qi, v8qi )"  *)
(* "REJECTEDv4hi __builtin_ia32_pmulhrsw (v4hi, v4hi )"  *)
(* "REJECTEDv8qi __builtin_ia32_pshufb (v8qi, v8qi )"  *)
(* "REJECTEDv8qi __builtin_ia32_psignb (v8qi, v8qi )"  *)
(* "REJECTEDv2si __builtin_ia32_psignd (v2si, v2si )"  *)
(* "REJECTEDv4hi __builtin_ia32_psignw (v4hi, v4hi )"  *)
(* "REJECTEDv1di __builtin_ia32_palignr (v1di, v1di, int )"  *)
(* "REJECTEDv8qi __builtin_ia32_pabsb (v8qi )"  *)
(* "REJECTEDv2si __builtin_ia32_pabsd (v2si )"  *)
(* "REJECTEDv4hi __builtin_ia32_pabsw (v4hi )"  *)
;  ( "__builtin_ia32_phaddd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSSE3
   , []		
   , "phaddd"		
   , true		
   )
;  ( "__builtin_ia32_phaddw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSSE3
   , []		
   , "phaddw"		
   , true		
   )
;  ( "__builtin_ia32_phaddsw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSSE3
   , []		
   , "phaddsw"		
   , true		
   )
;  ( "__builtin_ia32_phsubd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSSE3
   , []		
   , "phsubd"		
   , true		
   )
;  ( "__builtin_ia32_phsubw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSSE3
   , []		
   , "phsubw"		
   , true		
   )
;  ( "__builtin_ia32_phsubsw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSSE3
   , []		
   , "phsubsw"		
   , true		
   )
;  ( "__builtin_ia32_pmaddubsw128"
   , (t_v8hi, [t_v16qi;t_v16qi], false)
   , cSSSE3
   , []		
   , "pmaddubsw"		
   , true		
   )
;  ( "__builtin_ia32_pmulhrsw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSSE3
   , []		
   , "pmulhrsw"		
   , true		
   )
;  ( "__builtin_ia32_pshufb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSSE3
   , []		
   , "pshufb"		
   , true		
   )
;  ( "__builtin_ia32_psignb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSSE3
   , []		
   , "psignb"		
   , true		
   )
;  ( "__builtin_ia32_psignd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSSE3
   , []		
   , "psignd"		
   , true		
   )
;  ( "__builtin_ia32_psignw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSSE3
   , []		
   , "psignw"		
   , true		
   )
;  ( "__builtin_ia32_palignr128"
   , (t_v2di, [t_v2di;t_v2di;t_int], false)
   , cSSSE3
   , [2]		
   , "palignr"		
   , true		
   )
;  ( "__builtin_ia32_pabsb128"
   , (t_v16qi, [t_v16qi], false)
   , cSSSE3
   , []		
   , "pabsb"		
   , false		
   )
;  ( "__builtin_ia32_pabsd128"
   , (t_v4si, [t_v4si], false)
   , cSSSE3
   , []		
   , "pabsd"		
   , false		
   )
;  ( "__builtin_ia32_pabsw128"
   , (t_v8hi, [t_v8hi], false)
   , cSSSE3
   , []		
   , "pabsw"		
   , false		
   )
;  ( "__builtin_ia32_blendpd"
   , (t_v2df, [t_v2df;t_v2df;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "blendpd"		
   , true		
   )
;  ( "__builtin_ia32_blendps"
   , (t_v4sf, [t_v4sf;t_v4sf;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "blendps"		
   , true		
   )
;  ( "__builtin_ia32_blendvpd"
   , (t_v2df, [t_v2df;t_v2df;t_v2df], false)
   , cSSE41
   , []		
   , "blendvpd"		
   , true		
   )
;  ( "__builtin_ia32_blendvps"
   , (t_v4sf, [t_v4sf;t_v4sf;t_v4sf], false)
   , cSSE41
   , []		
   , "blendvps"		
   , true		
   )
;  ( "__builtin_ia32_dppd"
   , (t_v2df, [t_v2df;t_v2df;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "dppd"		
   , true		
   )
;  ( "__builtin_ia32_dpps"
   , (t_v4sf, [t_v4sf;t_v4sf;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "dpps"		
   , true		
   )
;  ( "__builtin_ia32_insertps128"
   , (t_v4sf, [t_v4sf;t_v4sf;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "insertps"		
   , true		
   )
;  ( "__builtin_ia32_mpsadbw128"
   , (t_v16qi, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "mpsadbw"		
   , true		
   )
;  ( "__builtin_ia32_packusdw128"
   , (t_v8hi, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "packusdw"		
   , true		
   )
;  ( "__builtin_ia32_pblendvb128"
   , (t_v16qi, [t_v16qi;t_v16qi;t_v16qi], false)
   , cSSE41
   , []		
   , "pblendvb"		
   , true		
   )
;  ( "__builtin_ia32_pblendw128"
   , (t_v8hi, [t_v8hi;t_v8hi;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "pblendw"		
   , true		
   )
;  ( "__builtin_ia32_pcmpeqq"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE41
   , []		
   , "pcmpeqq"		
   , true		
   )
;  ( "__builtin_ia32_phminposuw128"
   , (t_v8hi, [t_v8hi], false)
   , cSSE41
   , []		
   , "phminposuw"		
   , false		
   )
;  ( "__builtin_ia32_pmaxsb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE41
   , []		
   , "pmaxsb"		
   , true		
   )
;  ( "__builtin_ia32_pmaxsd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "pmaxsd"		
   , true		
   )
;  ( "__builtin_ia32_pmaxud128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "pmaxud"		
   , true		
   )
;  ( "__builtin_ia32_pmaxuw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE41
   , []		
   , "pmaxuw"		
   , true		
   )
;  ( "__builtin_ia32_pminsb128"
   , (t_v16qi, [t_v16qi;t_v16qi], false)
   , cSSE41
   , []		
   , "pminsb"		
   , true		
   )
;  ( "__builtin_ia32_pminsd128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "pminsd"		
   , true		
   )
;  ( "__builtin_ia32_pminud128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "pminud"		
   , true		
   )
;  ( "__builtin_ia32_pminuw128"
   , (t_v8hi, [t_v8hi;t_v8hi], false)
   , cSSE41
   , []		
   , "pminuw"		
   , true		
   )
;  ( "__builtin_ia32_pmovsxbd128"
   , (t_v4si, [t_v16qi], false)
   , cSSE41
   , []		
   , "pmovsxbd"		
   , false		
   )
;  ( "__builtin_ia32_pmovsxbq128"
   , (t_v2di, [t_v16qi], false)
   , cSSE41
   , []		
   , "pmovsxbq"		
   , false		
   )
;  ( "__builtin_ia32_pmovsxbw128"
   , (t_v8hi, [t_v16qi], false)
   , cSSE41
   , []		
   , "pmovsxbw"		
   , false		
   )
;  ( "__builtin_ia32_pmovsxdq128"
   , (t_v2di, [t_v4si], false)
   , cSSE41
   , []		
   , "pmovsxdq"		
   , false		
   )
;  ( "__builtin_ia32_pmovsxwd128"
   , (t_v4si, [t_v8hi], false)
   , cSSE41
   , []		
   , "pmovsxwd"		
   , false		
   )
;  ( "__builtin_ia32_pmovsxwq128"
   , (t_v2di, [t_v8hi], false)
   , cSSE41
   , []		
   , "pmovsxwq"		
   , false		
   )
;  ( "__builtin_ia32_pmovzxbd128"
   , (t_v4si, [t_v16qi], false)
   , cSSE41
   , []		
   , "pmovzxbd"		
   , false		
   )
;  ( "__builtin_ia32_pmovzxbq128"
   , (t_v2di, [t_v16qi], false)
   , cSSE41
   , []		
   , "pmovzxbq"		
   , false		
   )
;  ( "__builtin_ia32_pmovzxbw128"
   , (t_v8hi, [t_v16qi], false)
   , cSSE41
   , []		
   , "pmovzxbw"		
   , false		
   )
;  ( "__builtin_ia32_pmovzxdq128"
   , (t_v2di, [t_v4si], false)
   , cSSE41
   , []		
   , "pmovzxdq"		
   , false		
   )
;  ( "__builtin_ia32_pmovzxwd128"
   , (t_v4si, [t_v8hi], false)
   , cSSE41
   , []		
   , "pmovzxwd"		
   , false		
   )
;  ( "__builtin_ia32_pmovzxwq128"
   , (t_v2di, [t_v8hi], false)
   , cSSE41
   , []		
   , "pmovzxwq"		
   , false		
   )
;  ( "__builtin_ia32_pmuldq128"
   , (t_v2di, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "pmuldq"		
   , true		
   )
;  ( "__builtin_ia32_pmulld128"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE41
   , []		
   , "pmulld"		
   , true		
   )
(** NOTE: _mm_testc_si128 **)
;  ( "__builtin_ia32_ptestc128"
   , (t_int, [t_v2di;t_v2di], false)
   , cSSE41
   , []
   , "xor %0, %0\n\tptest %2, %1\n\tsetb %l0"
   , false
   )
;  ( "__builtin_ia32_ptestnzc128"
   , (t_int, [t_v2di;t_v2di], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for PTESTNZC128*)
   , "NYI"		(*Asm instruction __builtin_ia32_ptestnzc128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PTESTNZC128*)
   )

(** NOTE: _mm_testz_si128 **)
;  ( "__builtin_ia32_ptestz128"
   , (t_int, [t_v2di;t_v2di], false)
   , cSSE41
   , []
   , "xor %0, %0\n\tptest %2, %1\n\tsete %l0"
   , false
   )
;  ( "__builtin_ia32_roundpd"
   , (t_v2df, [t_v2df;t_const (t_int)], false)
   , cSSE41
   , [1]		
   , "roundpd"		
   , false		
   )
;  ( "__builtin_ia32_roundps"
   , (t_v4sf, [t_v4sf;t_const (t_int)], false)
   , cSSE41
   , [1]		
   , "roundps"		
   , false		
   )
;  ( "__builtin_ia32_roundsd"
   , (t_v2df, [t_v2df;t_v2df;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "roundsd"		
   , true		
   )
;  ( "__builtin_ia32_roundss"
   , (t_v4sf, [t_v4sf;t_v4sf;t_const (t_int)], false)
   , cSSE41
   , [2]		
   , "roundss"		
   , true		
   )
;  ( "__builtin_ia32_vec_set_v4sf"
   , (t_v4sf, [t_v4sf;t_float;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V4SF*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_set_v4sf not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V4SF*)
   )
;  ( "__builtin_ia32_vec_ext_v16qi"
   , (t_int, [t_v16qi;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V16QI*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_ext_v16qi not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V16QI*)
   )
;  ( "__builtin_ia32_vec_set_v16qi"
   , (t_v16qi, [t_v16qi;t_int;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V16QI*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_set_v16qi not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V16QI*)
   )
;  ( "__builtin_ia32_vec_set_v4si"
   , (t_v4si, [t_v4si;t_int;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V4SI*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_set_v4si not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V4SI*)
   )
;  ( "__builtin_ia32_vec_set_v2di"
   , (t_v2di, [t_v2di;t_longlong;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V2DI*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_set_v2di not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V2DI*)
   )
;  ( "__builtin_ia32_vec_ext_v4sf"
   , (t_float, [t_v4sf;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V4SF*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_ext_v4sf not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V4SF*)
   )

(** NOTE : _mm_cvtsi128_si32 **)
;  ( "__builtin_ia32_vec_ext_v4si"
   , (t_int, [t_v4si;t_const (t_int)], false)
   , cSSE41
   , [2]
   , "movd %0, %1"
   , false
   )
;  ( "__builtin_ia32_vec_ext_v2di"
   , (t_longlong, [t_v2di;t_const (t_int)], false)
   , cSSE41
   , []		(*cannot infer immediate arguments for V2DI*)
   , "NYI"		(*Asm instruction __builtin_ia32_vec_ext_v2di not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction V2DI*)
   )
;  ( "__builtin_ia32_pcmpestrm128"
   , (t_v16qi, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		
   , "pcmpestrm"		
   , false		(*INCONSISTENT NUMBER OF ARGUMENTS IN PCMPESTRM*)
   )
;  ( "__builtin_ia32_pcmpestri128"
   , (t_int, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		
   , "pcmpestri"		
   , false		(*INCONSISTENT NUMBER OF ARGUMENTS IN PCMPESTRI*)
   )
;  ( "__builtin_ia32_pcmpestria128"
   , (t_int, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPESTRIA128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpestria128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPESTRIA128*)
   )
;  ( "__builtin_ia32_pcmpestric128"
   , (t_int, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPESTRIC128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpestric128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPESTRIC128*)
   )
;  ( "__builtin_ia32_pcmpestrio128"
   , (t_int, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPESTRIO128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpestrio128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPESTRIO128*)
   )
;  ( "__builtin_ia32_pcmpestris128"
   , (t_int, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPESTRIS128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpestris128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPESTRIS128*)
   )
;  ( "__builtin_ia32_pcmpestriz128"
   , (t_int, [t_v16qi;t_int;t_v16qi;t_int;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPESTRIZ128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpestriz128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPESTRIZ128*)
   )
;  ( "__builtin_ia32_pcmpistrm128"
   , (t_v16qi, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , [2]		
   , "pcmpistrm"		
   , false		
   )
;  ( "__builtin_ia32_pcmpistri128"
   , (t_int, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , [2]		
   , "pcmpistri"		
   , false		
   )
;  ( "__builtin_ia32_pcmpistria128"
   , (t_int, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPISTRIA128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpistria128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPISTRIA128*)
   )
;  ( "__builtin_ia32_pcmpistric128"
   , (t_int, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPISTRIC128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpistric128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPISTRIC128*)
   )
;  ( "__builtin_ia32_pcmpistrio128"
   , (t_int, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPISTRIO128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpistrio128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPISTRIO128*)
   )
;  ( "__builtin_ia32_pcmpistris128"
   , (t_int, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPISTRIS128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpistris128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPISTRIS128*)
   )
;  ( "__builtin_ia32_pcmpistriz128"
   , (t_int, [t_v16qi;t_v16qi;t_const (t_int)], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for PCMPISTRIZ128*)
   , "NYI"		(*Asm instruction __builtin_ia32_pcmpistriz128 not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction PCMPISTRIZ128*)
   )
;  ( "__builtin_ia32_pcmpgtq"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cSSE42
   , []		
   , "pcmpgtq"		
   , true		
   )
;  ( "__builtin_ia32_crc32qi"
   , (t_uint, [t_uint;t_uchar], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for CRC32QI*)
   , "NYI"		(*Asm instruction __builtin_ia32_crc32qi not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction CRC32QI*)
   )
;  ( "__builtin_ia32_crc32hi"
   , (t_uint, [t_uint;t_ushort], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for CRC32HI*)
   , "NYI"		(*Asm instruction __builtin_ia32_crc32hi not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction CRC32HI*)
   )
;  ( "__builtin_ia32_crc32si"
   , (t_uint, [t_uint;t_uint], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for CRC32SI*)
   , "NYI"		(*Asm instruction __builtin_ia32_crc32si not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction CRC32SI*)
   )
;  ( "__builtin_ia32_crc32di"
   , (t_ulonglong, [t_ulonglong;t_ulonglong], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for CRC32DI*)
   , "NYI"		(*Asm instruction __builtin_ia32_crc32di not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction CRC32DI*)
   )
;  ( "__builtin_popcount"
   , (t_int, [t_uint], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for POPCOUNT*)
   , "NYI"		(*Asm instruction __builtin_popcount not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction POPCOUNT*)
   )
;  ( "__builtin_popcountl"
   , (t_int, [t_ulong], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for POPCOUNTL*)
   , "NYI"		(*Asm instruction __builtin_popcountl not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction POPCOUNTL*)
   )
;  ( "__builtin_popcountll"
   , (t_int, [t_ulonglong], false)
   , cSSE42
   , []		(*cannot infer immediate arguments for POPCOUNTLL*)
   , "NYI"		(*Asm instruction __builtin_popcountll not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction POPCOUNTLL*)
   )
;  ( "__builtin_ia32_aesenc128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cAES
   , []		
   , "aesenc"		
   , true		
   )
;  ( "__builtin_ia32_aesenclast128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cAES
   , []		
   , "aesenclast"		
   , true		
   )
;  ( "__builtin_ia32_aesdec128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cAES
   , []		
   , "aesdec"		
   , true		
   )
;  ( "__builtin_ia32_aesdeclast128"
   , (t_v2di, [t_v2di;t_v2di], false)
   , cAES
   , []		
   , "aesdeclast"		
   , true		
   )
;  ( "__builtin_ia32_aeskeygenassist128"
   , (t_v2di, [t_v2di;t_const (t_int)], false)
   , cAES
   , [1]		
   , "aeskeygenassist"		
   , false		
   )
;  ( "__builtin_ia32_aesimc128"
   , (t_v2di, [t_v2di], false)
   , cAES
   , []		
   , "aesimc"		
   , false		
   )
;  ( "__builtin_ia32_pclmulqdq128"
   , (t_v2di, [t_v2di;t_v2di;t_const (t_int)], false)
   , cPCLMUL
   , [2]		
   , "pclmulqdq"		
   , true		
   )
;  ( "__builtin_ia32_rdrand16_step"
   , (t_uint, [t_ptr (t_ushort)], false)
   , cRDRND
   , []		(*cannot infer immediate arguments for STEP*)
   , "NYI"		(*Asm instruction __builtin_ia32_rdrand16_step not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction STEP*)
   )
;  ( "__builtin_ia32_rdrand32_step"
   , (t_uint, [t_ptr (t_uint)], false)
   , cRDRND
   , []		(*cannot infer immediate arguments for STEP*)
   , "NYI"		(*Asm instruction __builtin_ia32_rdrand32_step not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction STEP*)
   )
;  ( "__builtin_ia32_rdrand64_step"
   , (t_uint, [t_ptr (t_ulonglong)], false)
   , cRDRND
   , []		(*cannot infer immediate arguments for STEP*)
   , "NYI"		(*Asm instruction __builtin_ia32_rdrand64_step not found!*)
   , false		(*Cannot infer TWO-ADDR for instruction STEP*)
   )

(** NOTE : sha256 hw support **)
;
   ( "__builtin_ia32_sha256msg1"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE
   , []
   , "sha256msg1"
   , true
   )

;  ( "__builtin_ia32_sha256msg2"
   , (t_v4si, [t_v4si;t_v4si], false)
   , cSSE
   , []		
   , "sha256msg2"		
   , true
   )

;  ( "__builtin_ia32_sha256rnds2"
   , (t_v4si, [t_v4si;t_v4si;t_v4si], false)
   , cSSE
   , []
   , "sha256rnds2"		
   , true
   )
]
